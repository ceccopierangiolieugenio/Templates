version: "3.7"
services:

  psql:
    image: postgres:13-alpine
    environment: 
      POSTGRES_PASSWORD: "SecretPassword"
    volumes:
      - ./services/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - pds_net

  pds:
    build: 
      context: .
      target: pds_image
    environment:
      PDS_PORT: ":50151"
      SQL_HOST: "psql:5432"
      SQL_USER: "postgres"
      SQL_PASS: "SecretPassword"
    command: sh -c "while ! nc -vz psql:5432 ; do sleep 1 ; done; ./main"
    networks:
      - pds_net

  web_server:
    build: 
      context: .
      target: client_image
    environment:
      PDS_HOST: "pds:50151"
      HTTP_PORT: ":5000"
    volumes:
      - ./test/ports.json:/opt/webserver/ports.json:ro
    command: sh -c "while ! nc -vz pds:50151 ; do sleep 1 ; done; ./main -in /opt/webserver/ports.json"
    networks:
      - pds_net
      - client_net

  nginx:
    restart: always
    image: nginx
    ports:
      - "8080:80"
    volumes:
    - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - client_net

  func_test:
    image: postman/newman:alpine
    networks:
      - client_net
    volumes:
      - ./test/postman:/etc/newman:ro
    command: run Golang_gRPC-Test.postman_collection.json -e gRPC-Test.postman_environment.json

networks:
  pds_net:
  client_net:
